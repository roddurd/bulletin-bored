import Head from "next/head";
import Message from "../components/message";
import { useEffect, useState } from "react";
import { db } from "../utils/firebase";
import { collection, orderBy, query, onSnapshot } from "firebase/firestore";
import Link from "next/link";

export default function Home() {
  // Create state with all posts
  const [allPosts, setAllPosts] = useState([]);
  const getPosts = async () => {
    const collectionRef = collection(db, "posts");
    const q = query(collectionRef, orderBy("timestamp", "desc"));
    // snapshot continuously looks for changes to the query
    // this will update all posts whenever there is a change
    const unsubscribe = onSnapshot(q, (snapshot) => {
      setAllPosts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
    });
    return unsubscribe;
  };

  useEffect(() => {
    getPosts();
  }, []);

  return (
    <>
      <Head>
        <title>Bulletin Bored</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="my-12 text-lg font-medium">
        <h2 className="text-2xl font-bold py-5">
          See what other people are saying!
        </h2>
        {allPosts.map((post) => {
          return (
            <Message {...post} key={post.id}>
              <Link
                className="font-bold"
                href={{ pathname: `/${post.id}`, query: { ...post } }}
              >
                {post.comments?.length > 0 ? post.comments?.length : 0}{" "}
                {post.comments?.length == 1 ? "comment" : "comments"}
              </Link>
            </Message>
          );
        })}
      </div>
    </>
  );
}
